openapi: 3.0.0
info:
  title: Turing API developed by Meshack Mbuvi
  summary: API endpoints for Gebeya marketplace exam
  description: Nodejs backend for Gebeya marketplace exam

version: 0.1.9

servers:
  - url: http://localhost:5000/api

components:
  securitySchemes:
    USER-KEY:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Item:
      type: object
      properties:
        id:
          type: number
          example: 1
        name:
          type: string
          example: banana
        description:
          type: string
          example: "product description"
        price:
          type: number
        photo:
          type: string
        vendorName:
            type: string
    Items:
      type: array
      $ref: '#components/schemas/Item'
    
    User:
      type: object
      properties:
        id:
          type: string
          example: 1
        name:
          type: string
        email:
          type: string
        password:
          type: string
paths:
  /items:
    get:
      summary: Retrieve all items
      description: Retrieve all products from api
      tags:
        - Items
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: Inform the page. Starting with 1. Default: 1
        - in: query
          name: limit
          schema:
            type: integer
          description: Limit per page, Default: 20.
      responses:
        200:
          description: Get All Products
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
                limit:
                    type: number
                page:
                    type: number
                rows:
                    $ref: '#components/schemas/Products'
  /users/signup:
    post:
        Summary: Add new user account
        tags:
            - User
        requestBody:
            required: true
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            name: 
                                type: string
                            email:
                                type: string
                            password:
                                type: string
        responses:
            201:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                user:
                                    $ref: '#components/schemas/User'
                                token: 
                                    type: string
                                message:
                                    type: string
            400:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                message:
                                    type: string
  /users/login:
    post:
        Summary: Login a user to the application
        tags:
            - User
        requestBody:
            required: true
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            email:
                                type: string
                            password:
                                type: string
        responses:
            200:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                user:
                                    $ref: '#components/schemas/User'
                                token: 
                                    type: string
                                message:
                                    type: string
            400:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                message:
                                    type: string
